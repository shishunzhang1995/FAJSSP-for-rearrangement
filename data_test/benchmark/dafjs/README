This directory contains the source code in C++ of a random instance 
generator and a set of 30 Flexible Job-Shop Scheduling instances 
proposed, described, and used in 

    E.G. Birgin, P. Feofiloff, C.G. Fernandes, E.L. de Melo, M.T.I. Oshiro, 
    D.P. Ronconi, A MILP model for an extended version of the Flexible Job 
    Shop Problem, submitted, 2012. 

These instances are for a more general version of the Flexible
JobShop Scheduling Problem, described in [1]. This version allows 
for jobs that are sets of operations with an arbitrary precedence
relation. The instances presented in this directory contain jobs of a
special type, more general than the instances presented in the
directory yfjs. Basically, each job in these instances start by a
single sequence of operations (possibly empty) that split at a
disassembling operation into two or three branches, merging afterwards
into an assembling operation, followed by another (possibly empty)
sequence of operations, as depicted below.

      - - -                             - - -
    /       \                         /       \
- -          - - -            - - - -   - - -   - - - 
    \       /                         \       /
      - - -                             - - -

The instances are such that all maximal paths are of the same length. 

Each instance was genetated by the given random instance generator 
and is given in a file according to the following description. 

Let N be the total number of operations of all jobs in the instance, 
    A be the number of arcs in the precedence relation, and 
    K be the number of machines in the instance. 

The operations are labeled from 0 to N-1 and the machines are labeled
from 0 to K-1.

The first line of the file for each instance contains the numbers N,
A, and K.  Each of the next A lines contains two distinct operations
(labels), U and V, indicating that operation U must be processed
before operation V. Finally, the last N lines describe one operation
each, that is, the (A + 2)-th line in the file corresponds to
operation 0, the (A + 3)-th line corresponds to operation 1, and so
on. The description of each operation begins with the number M of
machines which can process the operation, followed by M pairs of
numbers indicating, respectively, (the label of) a machine and the
time that this machine takes to process the operation.

Any line starting with a # is a comment line.

This set of instances was generated by the random instance generator
whose source-code is in the file dagenerator.c, also available in this
directory. Instructions on how to use the generator are in the
beginning of the file dagenerator.c.
